1. Print the word with odd letters as
P         M
 R      A
   O  R
     G
  O    R
 R       A
P          M 
class Main {
    public static void main(String[] args) {
        String str="ABCDEFG";
        for(int i=0;i<str.length();i++)
        {
            for(int j=0;j<str.length();j++)
            {
                System.out.print(j==i||j==str.length()-1-i?str.charAt(j):" ");
            }
            System.out.println();
        }
    }
}

2.word search in given matrix
Sample :         
  a   z  o   l 
  n   x  h   o
  v   y   i   v 
  o   r   s  e 
 Dictionary = {van, zoho, love, are, is} 
 
Output: 
    zoho 
    love 
    Is 
public class WordSearch {
    public static void main(String[] args) {
        char[][] matrix = {
            {'a', 'z', 'o', 'l'},
            {'n', 'x', 'h', 'o'},
            {'v', 'y', 'i', 'v'},
            {'o', 'r', 's', 'e'}
        };
        String[] dictionary = {"van", "zoho", "love", "are", "is"};
        
        for (String word : dictionary) {
            if (searchWord(matrix, word, 0, 0, 0)) {
                System.out.println(word);
            }
        }
    }

    public static boolean searchWord(char[][] matrix, String word, int row, int col, int index) {
        if (index == word.length()) return true;

        if (row < 0 || row >= matrix.length || col < 0 || col >= matrix[0].length) return false;

        if (matrix[row][col] == word.charAt(index)) {
            // Move in all 4 directions and check recursively
            return searchWord(matrix, word, row + 1, col, index + 1) ||
                   searchWord(matrix, word, row - 1, col, index + 1) ||
                   searchWord(matrix, word, row, col + 1, index + 1) ||
                   searchWord(matrix, word, row, col - 1, index + 1);
        }

        return false;
    }
}

3.
Input  : {1, 2, 3, 4, 5, 6, 7}
Output : {7, 1, 6, 2, 5, 3, 4} 

4.Remove unbalanced parentheses in a given expression.
    Eg.) Input  : ((abc)((de))
         Output : ((abc)(de))  

         Input  : (((ab)
         Output : (ab) 
public class RemoveUnbalancedParentheses {
    public static void main(String[] args) {
        String input = "((abc)((de))";
        System.out.println(removeUnbalanced(input, 0, 0));
        
        input = "(((ab)";
        System.out.println(removeUnbalanced(input, 0, 0));
    }

    public static String removeUnbalanced(String expression, int index, int balance) {
        if (index == expression.length()) return "";

        char ch = expression.charAt(index);
        if (ch == '(') {
            if (balance > 0) {
                return "(" + removeUnbalanced(expression, index + 1, balance + 1);
            }
            return removeUnbalanced(expression, index + 1, balance);
        }
        if (ch == ')') {
            if (balance > 0) {
                return ")" + removeUnbalanced(expression, index + 1, balance - 1);
            }
            return removeUnbalanced(expression, index + 1, balance);
        }
        return ch + removeUnbalanced(expression, index + 1, balance);
    }
}



5.Form a number system with only 3 and 4. Find the nth number of the number system.
Eg.) The numbers are: 3, 4, 33, 34, 43, 44, 333, 334, 343, 344, 433, 434, 443, 444, 3333, 3334, 3343, 3344, 3433, 3434, 3443, 3444

    public class CustomNumberSystem
    {
        public static void main(String[] args) 
        {
            int n = 10; // Example input for nth number
            for(int i=0;i<=20;i++)
            {
                System.out.println(findNthNumber(i));
            }
        }

        static String findNthNumber(int n) 
        {
            String result = "";
            while (n > 0) {
                // Find remainder when n is divided by 2 (as we have two digits in our system)
                int remainder = (n - 1) % 2;
                // Convert remainder to '3' or '4' and prepend to result
                result = (remainder == 0 ? '0' : '1') + result;
                // Update n for the next iteration
                n = (n - 1) / 2;
            }
            return result;
        }
}

6.Check whether a given mathematical expression is valid.
    Eg. Input  : (a+b)(a*b)
         Output : Valid

         Input  : (ab)(ab+)
         Output : Invalid

         Input  : ((a+b)
         Output : Invalid 

7.
Write a program to give the following output for the given input

Eg 1: Input: a1b10
       Output: abbbbbbbbbb
Eg: 2: Input: b3c6d15
          Output: bbbccccccddddddddddddddd
The number varies from 1 to 99.

8.
Write a program to sort the elements in odd positions in descending order and elements in ascending order
Eg 1: Input: 13,2 4,15,12,10,5
        Output: 13,2,12,10,5,15,4
Eg 2: Input: 1,2,3,4,5,6,7,8,9
        Output: 9,2,7,4,5,6,3,8,1 


9.
Find if a String2 is substring of String1.If it is, return the index of the first occurrence. else return -1.
Eg 1:Input:
        String 1: test123string
         String 2: 123
        Output: 4
Eg 2: Input:
        String 1: testing12
        String 2: 1234 
        Output: -1

10.Given two sorted arrays,merge them such that the elements are not repeated
Eg 1: 
Input:
      Array 1: 2,4,5,6,7,9,10,13
      Array 2: 2,3,4,5,6,7,8,9,11,15
Output:
      Merged array: 2,3,4,5,6,7,8,9,10,11,13,15 

11.
Using Recursion reverse the string such as
Eg 1: Input: one two three
      Output: three two one
Eg 2: Input: I love india
      Output: india love I 

12.Help john to find new friends in social network
Input:
  3
  Mani 3 ram raj guna
  Ram 2 kumar Kishore
  Mughil 3 praveen Naveen Ramesh
Output:
  Raj guna kumar Kishore praveen Naveen Ramesh


13.Find the union intersection of two list and also find except (remove even elements from list1 and odd elements from list2)
Input:
    List 1: 1,3,4,5,6,8,9
    List 2: 1, 5,8,9,2
Output:
    Union: 1, 3,4,5,6,8,9,2
    Intersection: 1,5,8,9
    Except: 1, 3, 5,9,8,2 


14.Rotate the matrix elements
For 3*3 matrix
Input
  1    2    3
  4    5    6
  7    8    9

Output:
  4    1    2
  7    5    3
  8    9    6

15.
Find the largest possible prime number with given no
Input
  4691
Output:
  9461

16.Given a string of integers find out all the possible words that can made out of it in continuous order.
Eg: 11112
ans:
AAAAB
AKAB
AAKB
AAAL etc.

17.Given a matrix dimension find the shortest path between two points.


18.shortest path between two points and a monster is present. So we have to a
void the monster and take a shortest path or die.

19.Arrange the numbers in descending order depending on the no. of factors available for each number.
I/P: {6,8,9}
O/P: {8,6,9} or {6,8,9}
Reason: factors of 8 (1,2,4,8), factors of 6 (1,2,3,6), factors of 9 (1,3,9).

20. Two strings of equal length are given print the mismatched ones.
I/P: a b c d e f g h i
      a b d e e g g i i
O/P: cd , de //when two char are mismatched they should be printed together.
      f , g
      h , i


21.Get a number and check whether its palindrome do not use arrays and string manipulations
I/P: 5
O/P: 101-Palindrome
Reason: binary representation of 5 is 101 & it is a palindrome.
I/P: 10
O/P: Binary representation of 10 is 1010 –Not a palindrome

22.For any given matrix find the path from the start to the end which gives the maximum sum. Traverse only right or down.
Example: starting index is 15 (left top) and ending index is 10 (bottom right)
15 25 30
45 25 60
70 75 10
O/P:15->45->70->75->10 sum is 215

23.[ [‘Lava’ , ‘kusha] ,
[‘Rama’ , ‘Lava’] ,
[‘Lava ‘,’Ravanan’] ,
[‘Abi’ , ‘Lava’] ]
First string is the child & the second string is the parent. Print the no. of grand children available for the
given I/P.
I/P: Ravanan
O/P: 2

24.Given a Boolean matrix mat[M][N] of size M X N, modify it such that if a matrix cell mat[i][j] is 1 then make its adjacent cells as 0.

25.Replace every element with the greatest element on right side
 For example, if the array is {16, 17, 4, 3, 5, 2}, then it should be modified to {17, 5, 5, 5, 2, -1}. 

26.Equilibrium index of an array
Input: arr[] = {-7, 1, 5, 2, -4, 3, 0} 
Output: 4 
Explanation: In 1-based indexing, 4 is an equilibrium index, because: arr[1] + arr[2] + arr[3] = arr[5] + arr[6] + arr[7] 

Input: arr[] = {1, 2, 3} 
Output: -1 
Explanation: There is no equilibrium index in the array.

27.Flood fill algorithm   
Input:
screen[M][N] = {{1, 1, 1, 1, 1, 1, 1, 1},
               {1, 1, 1, 1, 1, 1, 0, 0},
               {1, 0, 0, 1, 1, 0, 1, 1},
               {1, 2, 2, 2, 2, 0, 1, 0},
               {1, 1, 1, 2, 2, 0, 1, 0},
               {1, 1, 1, 2, 2, 2, 2, 0},
               {1, 1, 1, 1, 1, 2, 1, 1},
               {1, 1, 1, 1, 1, 2, 2, 1},
               };
    x = 4, y = 4, newColor = 3
The values in the given 2D screen
  indicate colors of the pixels.
x and y are coordinates of the brush,
   newColor is the color that
should replace the previous color on 
   screen[x][y] and all surrounding
pixels with same color.

Output:
Screen should be changed to following.
screen[M][N] = {{1, 1, 1, 1, 1, 1, 1, 1},
               {1, 1, 1, 1, 1, 1, 0, 0},
               {1, 0, 0, 1, 1, 0, 1, 1},
               {1, 3, 3, 3, 3, 0, 1, 0},
               {1, 1, 1, 3, 3, 0, 1, 0},
               {1, 1, 1, 3, 3, 3, 3, 0},
               {1, 1, 1, 1, 1, 3, 1, 1},
               {1, 1, 1, 1, 1, 3, 3, 1},
               };

28.Print matrix in zig-zag fashion
Input: 
{{1, 2, 3}
{4, 5, 6}
{7, 8, 9}}
Output: 1 2 4 7 5 3 6 8 9

Input : [[1, 2, 3, 4], 
             [5, 6, 7, 8],
             [9, 10, 11, 12],
             [13, 14, 15, 16]]
Output:: 1 2 5 9 6 3 4 7 10 13 14 11 8 12 15 16


29.Print matrix in zig-zag fashion
Input: 
{{1, 2, 3}
{4, 5, 6}
{7, 8, 9}}
Output: 1 2 4 3 5 7 6 8 9

30.
Input :
       [
             [1, 2, 3, 4], 
             [5, 6, 7, 8],
             [9, 10, 11, 12],
             [13, 14, 15, 16]
       ]
Output:: 1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10

31.Display the result in the cell by evaluating the expression (without precedence and order of evaluation)
32.Display the result in the cell by evaluation the expression (using precedence and order of evaluation)
33.To check if there is any error in the given expression

34.Given an array arr[] of integers and an integer k, your task is to find the maximum value for each contiguous subarray of size k. The output should be an array of maximum values corresponding to each contiguous subarray.
Examples:
Input: arr[] = [1, 2, 3, 1, 4, 5, 2, 3, 6], k = 3
Output: [3, 3, 4, 5, 5, 5, 6] 
Explanation: 
1st contiguous subarray = [1 2 3] max = 3
2nd contiguous subarray = [2 3 1] max = 3
3rd contiguous subarray = [3 1 4] max = 4
4th contiguous subarray = [1 4 5] max = 5
5th contiguous subarray = [4 5 2] max = 5
6th contiguous subarray = [5 2 3] max = 5
7th contiguous subarray = [2 3 6] max = 6


35.Frequencies of Limited Range Array Elements You are given an array arr[] containing positive integers. The elements in the array arr[] range from 1 to n (where n is the size of the array),
and some numbers may be repeated or absent. Your task is to count the frequency of all numbers in the range 1 to n and return an array of size n 
such that result[i] represents the frequency of the number i (1-based indexing).

Examples
    Input: arr[] = [2, 3, 2, 3, 5]
    Output: [0, 2, 2, 0, 1]
    Explanation: We have: 1 occurring 0 times, 2 occurring 2 times, 3 occurring 2 times, 4 occurring 0 times, and 5 occurring 1 time.

36.Enter two strings from command line and check whether any substring present in first string that follows the pattern of second sting.. They asked to implement  regular expressions for * and backslash without built in functions.
“abcd” “a*cd” answer : yes
“aaaa” “a*”  answer : yes
“a*c” “a\*c” answer:yes
“adsd” “ad” answer:no

37.Minimum in a Sorted and Rotated Array
Examples: 
Input: arr[] = [5, 6, 1, 2, 3, 4]
Output: 1
Explanation: 1 is the minimum element present in the array.
Input: arr[] = [3, 2, 2, 2]
Output: 2
Explanation: 2 is the minimum element present in the array.
Input: arr[] = [4, 4, 4]
Output: 4
Explanation: 4 is the only minimum element in the array.

38.Expand the string according to the given conditions
Examples: 
Input: str = “3(ab)4(cd)” 
Output: abababcdcdcdcd
Input: str = “2(kl)3(ap)” 
Output: klklapapap 


39.1.Given two numbers a and b both < 200 we have to find the square numbers which lie between a and b(inclusive)
eg) i/p a = 20;b = 100;
      o/p 25,36,49,64,81,100 

40.Alternately sort an unsorted array..
eg) i/p {5,2,8,7,4,3,9}
      o/p {9,2,8,3,7,4,5}

41.Given two binary numbers add the two numbers in binary form without converting them to decimal value.
eg) a = 1010 b = 11001
      o/p  100011                
  b.The two numbers were given in base n 
    eg) a = 123  b = 13  n = 4
          o/p  202

42.Write a program to print the below pattern
for n = 6
1    7    12    16    19    21
2    8    13    17    20
3    9    14    18    
4    10    15
5    11    
6 

43.Given bigger NxN matrix and a smaller MxM matrix print TRUE if the smaller matrix can be found in the bigger matrix else print FALSE

44.Given two matrices a and b both of size NxN find if matrix a can be transformed to matrix b by rotating it 90deg , 180deg , 270deg if so print TRUE else print FALSE

45.In addition to the above question you have to check if matrix a can be transformed by mirroring vertically or horizontally to matrix b.


46.Element with left side smaller and right side greater

47.You’re given an even number n. If n=4, you have to print the following pattern :
4444
4334
4334
4444

48.
xxxxx
x000x
x0x0x
x000x
xxxxx

49.You’re given a number n. If write all the numbers from 1 to n in a paper, we have to find the number of characters written on the paper.For example if n=13, the output should be 18 if n = 101, the output should be 195

50.A number is called as binary-decimal if all the digits in the number should be either ‘1’ or ‘0’. Any number can be written as a sum of binary-decimals. Our task is to find the minimum number of binary-decimals to represent a number.Input : 32Output : 10 11 11
Input : 120
Output : 10 110


51.You’re given a string as an input. You have to reverse the string by keeping the punctuation and spaces. You have to modify the source string itself with creating an another string.
Input :A man, in the boat says : I see 1-2-3 in the sky
Output:y kse, ht ni3 21ee slsy : a sta o-b-e ht nin amA

52.Given a number, convert it into corresponding alphabet.

Input Output
       1     A
      26     Z
      27     AA
      676     ZZZ

53.Given a alphabet, convert it into corresponding number.
Input Output
A        1
Z        26
AA       27
ZZZ      676

54.Given a string in Roman number format (s), your task is to convert it to an integer. Various symbols and their values are given below.
Note: I = 1, V = 5, X = 10, L = 50, C = 100, D = 500, M = 1000
Examples:
Input: s = "V"
Output: 5
Explanation: V in integer form is equal to 5.
Input: s = "III" 
Output: 3
Explanation: III in integer form is equal to 3.
Input: s = "II" 
Output: 2
Explanation: II in integer form is equal to 2.

55.Write a program to print all permutations of a given string. Note here you need to take all combinations as well, say for the input ABC the output should be as follows:
Input: ABC
Output:
A
B C
AB AC BA BC CA CB
ABC ACB BCA BAC CBA CAB

56.Find the largest sum contiguous subarray which should not have negative numbers. We have to print the sum and the corresponding array elements which brought up the
sum.
Sample: 
Array : {­2, 7, 5, ­1, 3, 2, 9, ­7} 
Output: 
     Sum : 14 
     Elements : 3, 2, 9  

57.Given an odd length word which should be printed from the middle of the word.
The output should be in the following pattern.
Example:

Input: PROGRAM
Output:
              G
            GR
          GRA
       GRAM
     GRAMP
   GRAMPR

58.Given two strings denoting non-negative numbers s1 and s2. Calculate the sum of s1 and s2.
Examples:
Input: s1 = "25", s2 = "23"
Output: "48"
Explanation: The sum of 25 and 23 is 48.
Input: s1 = "2500", s2 = "23"
Output: "2523"
Explanation: The sum of 2500 and 23 is 2523.
Input: s1 = "2", s2 = "3"
Output: "5"
Explanation: The sum of 2 and 3 is 5.

59.Given an array arr[] of positive integers and another integer target. Determine whether two elements exist in the array whose sum is exactly target or not. Return a boolean value true if two elements exist in arr[] else return false.
Examples:
Input: arr[] = [1, 4, 45, 6, 10, 8], target = 16
Output: true
Explanation: arr[3] + arr[4] = 6 + 10 = 16
Input: arr[] = [1, 2, 4, 3, 6], target = 11
Output: false
Explanation: None of the pair makes a sum of 11


60.Kadane's Algorithm
Difficulty: MediumAccuracy: 36.28%Submissions: 1MPoints: 4
Given an integer array arr[]. You need to find the maximum sum of a subarray.
Examples:
Input: arr[] = [2, 3, -8, 7, -1, 2, 3]
Output: 11
Explanation: The subarray {7, -1, 2, 3} has the largest sum 11.
Input: arr[] = [-2, -4]
Output: -2
Explanation: The subarray {-2} has the largest sum -2.
Input: arr[] = [5, 4, 1, 7, 8]
Output: 25
Explanation: The subarray {5, 4, 1, 7, 8} has the largest sum 25.


61.Given an unsorted array arr containing only non-negative integers, your task is to find a continuous subarray (a contiguous sequence of elements) whose sum equals a specified value target. You need to return the 1-based indices of the leftmost and rightmost elements of this subarray.
Examples:
Input: arr[] = [1,2,3,7,5], target = 12
Output: [2, 4]
Explanation: The sum of elements from 2nd to 4th position is 12.
Input: arr[] = [1,2,3,4,5,6,7,8,9,10], target = 15,
Output: [1, 5]
Explanation: The sum of elements from 1st to 5th position is 15.
Input: arr[] = [7,2,1], target = 2
Output: [2, 2]
Explanation: The sum of elements from 2nd to 2nd position is 2.
Input: arr[] = [5,3,4], target = 2
Output: [-1]
Explanation: There is no subarray with sum 2.




62. Pangram Checking

Check whether all english alphabets are present in the given sentence or not

I/P: abc defGhi JklmnOP QRStuv wxyz

O/P: True

I/P: abc defGhi JklmnOP QRStuv

O/P: False



63. Password Strength

Find the strength of the given password string based on the conditions

Four rules were given based on the type and no. of characters in the string.

Weak – only Rule 1 is satisfied or Rule 1 is not satisfied

Medium – Two rules are satisfied

Good – Three rules satisfied

Strong – All Four rules satisfied



I/P: Qw!1        O/P: Weak

I/P: Qwertyuiop      O/P: Medium

I/P: QwertY123       O/P: Good

I/P: Qwerty@123    O/P: Strong



64. First Occurrences

Given two strings, find the first occurrence of all characters of second string in the first string and

print the characters between the least and the highest index

I/P: ZOHOCORPORATION PORT

O/P: OHOCORPORAT



Explanation: The index of P in first string is 7, O is 1, R is 6 and T is 11. The largest range is 1 – 11.

So print the characters of the first string in this inex range i.e. OHOCORPORAT



65. Matrix Diagonal sum

Given a matrix print the largest of the sums of the two triangles split by diagonal from top right to bottom left

I/P:

3 3

1 2 3

4 5 6

7 8 9

O/P: 38



66. Matrix Addition

Given n integer arrays of different size, find the addititon of numbers represented by the arrays

I/P: 4

3 5 4 2

2 4 5

4 5 6 7 8

4 9 2 1

1 2

O/P: 50856



67. Cricket Scores

Given a timeline of scores, find the individual scores of player 1 and player 2 and Extras

W – Wide N – No Ball . – Dot Ball

Consider the game starts from player 1

I/P:

1 . 2 . 4 3 6 W 1 . N . 2 1

O/P:

P1 – 8

P2 – 12

Extras – 2



68. Queries

R A B C

1 56 67 89

2 89 54 90

3 78 91 83

4 69 72 95

R – Rollno, A, B, C – Marks in three subjects

Given the above matrix, print the result of the queries given the following syntax.

The first input string has a single character denoting the field to be printed.

* – All fields of the selected rows

A – Print only field A

B – Print only field B

C – Print only field C

The second string contains the condition – <field><relational_operator><value>.

> – Greater than

< – Less than

= – Equal to



I/P: *

A>70

O/P:

2 89 54 90

3 78 91 83

4 69 72 95

I/P: A

C<90

O/P:

56

78



69. Count Possible Paths

Given a N*N binary matrix and the co-ordinate points of start and destination, find the number of possible path between them.

I/P:

4

1 0 0 1

1 0 1 0

1 1 1 0

0 1 1 1



1 2 (start position)

0 0 (destination)

O/P: 2

I/P:

4

1 0 0 1

1 0 1 0

1 1 1 0

0 1 1 1



2 0 (start position)

3 3 (destination)

O/P: 2



70. Shuffle an Array

Given a range of numbers print the numbers such that they are shuffled

First line contains no. of test cases.

I/P:

3

1 10

5 12

1 10



O/P: (The order of numbers may vary)

2 3 9 5 1 10 6 7 8 4

5 6 9 12 10 11 7 8

9 5 1 2 3 4 8 7 6 10



If any of the given ranges are same, The orders of the numbers must vary.

I/P: 4

1 7

1 7

1 7

1 7

O/P:

6 7 1 5 2 3 4

1 7 2 6 3 5 4

6 3 5 1 4 2 7

1 2 3 6 5 7 4



71.Given two dimensional matrix of integer and print the rectangle can be formed using given indices and also find the sum of the elements in the rectangle

Input: mat[M][N] = {{1, 2, 3, 4, 6}, {5, 3, 8, 1, 2}, {4, 6, 7, 5, 5}, {2, 4, 8, 9, 4} };

index = (2, 0) and (3, 4)

Output:

Rectangle

4 6 7 5 5

2 4 8 9 4

sum 54



72. Find the result subtraction, multiplication, division of two integers using + operator.

Input: 6 and 4

output:

addition 6+4 = 10,    subtraction  6+(-4) = 2,   multiplication = 24,   division = 1

Input : -8 and -4

Output:

addition -8+(-4) = -12,    subtraction  (-8)+(-(-4)) = -4,   multiplication = 32,   division = 2



73.Given a sentence of string, in that remove the palindrome words and print the remaining.

Input:

He did a good deed

Output:

He good

Input:

Hari speaks malayalam

Output:

Hari speaks



74.Given two dates, find total number of days between them.

Input: dt1 = {10, 2, 2014} dt2 = {10, 3, 2015}

Output: 393

dt1 represents “10-Feb-2014” and dt2 represents “10-Mar-2015” The difference is 365 + 28

Input: dt1 = {10, 2, 2000} dt2 = {10, 3, 2000}

Output: 29

Note that 2000 is a leap year

Input: dt1 = {10, 2, 2000} dt2 = {10, 2, 2000}

Output: 0

Both dates are same

Input: dt1 = {1, 2, 2000}; dt2 = {1, 2, 2004};

Output: 1461

Number of days is 365*4 + 1



75. Let 1 represent ‘A’, 2 represents ‘B’, etc. Given a digit sequence, count the number of possible decodings of the given digit sequence.

Examples:

Input: digits[] = “121”

Output: 3 // The possible decodings are “ABA”, “AU”, “LA”

Input: digits[] = “1234” Output: 3

// The possible decodings are “ABCD”, “LCD”, “AWD



76. Print longest sequence between same character

Ex I/p abcccccbba

O/p 8 (from a to a)

I/p aaaaaaaa

O/p 6



77.sort the array odd numbers in ascending and even numbers in descending.

I/p 5 8 11 6 2 1 7

O/p 1 5 7 11 8 6 2



78. It’s about anagram.i/p was array of strings .and a word was given to find whether it has anagram in given array.

I/p catch, got, tiger, mat, eat, Pat, tap, tea

Word: ate

O/p eat, tea



79.array of numbers were given to find a number which has same sum of numbers in it’s either side.

I/p 1, 2, 3, 7, 6

O/p 7(has 1+ 2+3 in left 6 in right)



80. To find the odd numbers in between the range.

Input:

2

15

Output:

3,5,7,9,11,13



81.To find the factors of the numbers given in an array and to sort the numbers in descending order according to the factors present in it.

Input:

Given array : 8, 2, 3, 12, 16

Output:

12, 16, 8, 2, 3



82.To output the number in words (0-999)

Input: 234

Output: Two hundred and Thirty Four



83.To find the print the pattern:Ip: n=5

Op:

1

1 1 2 1

1 2 1 1

1 1 1 2 2 1



84.A man his driving car from home to office with X petrol. There are N number of petrol bunks in the city with only few capacities and each petrol is located in different places For one km one liter will consume. So he fill up petrol in his petrol tank in each petrol bunks. Output the remaining petrol if he has or tell him that he cannot travel if he is out of petrol.

Input:

Petrol in car: 2 Liters

Petrol bunks: A B C

Distance from petrol each petrol bunks: 1, 5, 3

Capacities of each petrol bunk: 6, 4, 2

Output:

Remaining petrol in car is 5 liters



85.Print the given pattern:

Input:

N= 3, M=3

Output:

X X X

X 0 X

X X X



Input:

N=4 M=5

Output:

X X X X

X 0 0 X

X 0 0 X

X 0 0 X

X X X X



Input:

N=6 M=7

X X X X X X

X 0 0 0 0 X

X 0 X X 0 X

X 0 X X 0 X

X 0 X X 0 X

X 0 0 0 0 X

X X X X X X



86.To find the number of groups and output the groups:

Explanation: To find the sum of the elements in the groups and that sum should be divisible by input X and the groups should be limited to range with X numbers.

If X is 3, then the group should have only 2 elements and 3 elements from the array whose sum is divisible by 3.

Input:

Array: 3, 9, 7, 4, 6, 8

X: 3

Output:

3, 9

3, 6

9, 6

3, 9, 6

No of groups: 4



87.prime number – print n prime numbers

88.prime factor – sort the array based on the minimum factor they have.

89.adding a digit to all the digits of a number eg digit=4, number = 2875, o/p= 612119

form the largest possible number using the array of numbers.

90.lexicographic sorting.

91.given a set of numbers, and a digit in each iteration, if the digit exists in any of  the numbers, remove its occurrences and ask for the next digit till the list becomes empty.

92.Check if a number ‘a’ is present in another number ‘b.


93. Find the extra element and its index

Input : [ 10, 20, 30, 12, 5 ]

    [ 10, 5, 30, 20 ]

Output : 12 is the extra element in array 1 at index 4

Input : [ -1, 0, 3, 2 ]

    [ 3, 4, 0, -1, 2 ]

Output : 4 is the extra element in array 3 at index 5



94. Find the least prime number that can be added with first array element that makes them divisible by second array elements at respective index (check for prime numbers under 1000, if exist return -1 as answer) & (Consider 1 as prime number)

Input : [ 20, 7 ]

    [ 11, 5 ]

Output : [ 1, 3 ]

Explanation : 

(20 + ?) % 11 

( 7 + ?) % 5



95. Sort the array elements in descending order according to their frequency of occurrence

Input : [ 2 2 3 4 5 12 2 3 3 3 12 ]

Output : 3 3 3 3 2 2 2 12 12 4 5

Explanation : 3 occurred 4 times, 2 occurred 3 times, 12 occurred 2 times, 4 occurred 1 time, 5 occurred 1 time

Input : [ 0 -1 2 1 0 ]

Output : 0 0 -1 1 2

Note : sort single occurrence elements in ascending order



96. Print true if second string is a substring of first string, else print false.

Note : * symbol can replace n number of characters

Input : Spoon  Sp*n  Output : TRUE

    Zoho     *o*o  Output : TRUE

    Man       n*     Output : FALSE

    Subline  line   Output : TRUE



97.Given an array, find the minimum of all the greater numbers for each element in the array.  

Sample: 

Array : {2, 3, 7, ­1, 8, 5, 11} 

Output: 

{2­>3, 3­>5, 7­>8, ­1­>2, 8­>11, 5­>7, 11­>} 



98.Find the largest sum contiguous subarray which should not have negative numbers. We have to print the sum and the corresponding array elements which brought up the sum.

Sample: 

Array : {­2, 7, 5, ­1, 3, 2, 9, ­7} 

Output: 

     Sum : 14 

     Elements : 3, 2, 9  



99.Given a string, we have to reverse the string without changing the position of punctuations and spaces.

Sample:   house no : 123@ cbe 

Output:    ebc32 1o :  nes@ uoh 



100.Given a 2D grid of characters, you have to search for all the words in a dictionary by

moving only along two directions, either right or down. Print the word if it occurs.

Sample :         

  a   z  o   l 

  n   x  h   o

  v   y   i   v 

  o   r   s  e 

 Dictionary = {van, zoho, love, are, is} 

 Output: 

    zoho 

    love 

    Is 

 

101.Given a string, change the order of words in the string (last string should come first).

Should use RECURSION

Sample:   one two three 

Output :  three two one 

Should solve atleast 3 problems……Around 30 students cleared this round.


102.Help john to find new friends in social network

Input:

3

Mani 3 ram raj guna

Ram 2 kumar Kishore

Mughil 3 praveen Naveen Ramesh

Output:

Raj guna kumar Kishore praveen Naveen Ramesh


103.
Input:

With the starting and ending time of work given find the minimum no of workers needed

Start time         end time

1230            0130

1200            0100

1600            1700

Output:

2



104.
Find the union intersection of two list and also find except (remove even elements from list1 and odd elements from list2)

Input

List 1: 1,3,4,5,6,8,9

List 2: 1, 5,8,9,2



Union: 1, 3,4,5,6,8,9,2

Intersection: 1,5,8,9

Except: 1, 3, 5,9,8,2 



105.
Rotate the matrix elements

For 3*3 matrix

Input

1    2    3

4    5    6

7    8    9



Output:

4    1    2

7    5    3

8    9    6



For 4*4 matrix

Input:

1    2    3    4    

5    6    7    8

9    10    11    12

13    14    15    16



Output:

5    1    2    3

9    10    6    4

13    11    7    8

14    15    16    12



106.
Find the largest possible prime number with given no

Input

5

4691

Output:

9461



107. Given a text and a wildcard pattern, implement wildcard pattern matching algorithm that finds if wildcard pattern is matched with text. The matching should cover the entire text (not partial text).

The wildcard pattern can include the characters ‘?’ and ‘*’

‘?’ – matches any single character

‘*’ – Matches any sequence of characters (including the empty sequence)

Example:

Text = “baaabab”,

Pattern = “*****ba*****ab”,

output : true

Pattern = “baaa?ab”, output : true

Pattern = “ba*a?”, output : true

Pattern = “a*ab”, output : false



108. Given an input string and a dictionary of words, find out if the input string can be segmented into a space-separated sequence of dictionary words. See following examples for more details.

Consider the following dictionary 

{ i, like, sam, sung, samsung, mobile, ice, 

  cream, icecream, man, go, mango}

Input:  ilike

Output: Yes 

The string can be segmented as "i like".

Input:  ilikesamsung

Output: Yes

The string can be segmented as "i like samsung" 

or "i like sam sung".<>



109.Print the following pattern

   1  

  3 2

 6 5 4

10 9 8 7

10 9 8 7 

 6 5 4 

  3 2 

   1



110.Given an array as input, The condition is if the number is repeated you must add the number and put the next index value to 0. If the number is 0 print it at the last.

Eg: arr[] = { 0, 2, 2, 2, 0, 6, 6, 0, 8}

Output: 4 2 12 8 0 0 0 0 0 .



111. Replace every element with the greatest element on right side

Given an array of integers, replace every element with the next greatest element (greatest element on the right side) in the array. Since there is no element next to the last element, replace it with -1. For example, if the array is {16, 17, 4, 3, 5, 2}, then it should be modified to {17, 5, 5, 5, 2, -1}.



112. Given a Boolean matrix mat[M][N] of size M X N, modify it such that if a matrix cell mat[i][j] is 1 then make its adjacent cells as 0.



113. Equilibrium index of an array is an index such that the sum of elements at lower indexes is equal to the sum of elements at higher indexes. For example, in an array A:

Example :

Input: A[] = {-7, 1, 5, 2, -4, 3, 0}

Output: 3

3 is an equilibrium index, because:

A[0] + A[1] + A[2] = A[4] + A[5] + A[6]

Input: A[] = {1, 2, 3}

Output: -1



114. In MS-Paint, when we take the brush to a pixel and click, the color of the region of that pixel is replaced with a new selected color. Following is the problem statement to do this task.

Given a 2D screen, location of a pixel in the screen and a color, replace color of the given pixel and all adjacent same colored pixels with the given color.

Example:

Input:

       screen[M][N] = {{1, 1, 1, 1, 1, 1, 1, 1},

                      {1, 1, 1, 1, 1, 1, 0, 0},

                      {1, 0, 0, 1, 1, 0, 1, 1},

                      {1, 2, 2, 2, 2, 0, 1, 0},

                      {1, 1, 1, 2, 2, 0, 1, 0},

                      {1, 1, 1, 2, 2, 2, 2, 0},

                      {1, 1, 1, 1, 1, 2, 1, 1},

                      {1, 1, 1, 1, 1, 2, 2, 1},

                      };

    x = 4, y = 4, newColor = 3

The values in the given 2D screen indicate colors of the pixels.

x and y are coordinates of the brush, newColor is the color that

should replace the previous color on screen[x][y] and all surrounding

pixels with same color.



Output:

Screen should be changed to following.

       screen[M][N] = {{1, 1, 1, 1, 1, 1, 1, 1},

                      {1, 1, 1, 1, 1, 1, 0, 0},

                      {1, 0, 0, 1, 1, 0, 1, 1},

                      {1, 3, 3, 3, 3, 0, 1, 0},

                      {1, 1, 1, 3, 3, 0, 1, 0},

                      {1, 1, 1, 3, 3, 3, 3, 0},

                      {1, 1, 1, 1, 1, 3, 1, 1},

                      {1, 1, 1, 1, 1, 3, 3, 1},

                      };

115. Given a matrix of 2D array of n rows and m coloumns. Print this matrix in ZIG-ZAG fashion as shown in figure.

 

Example:

Input: 

1 2 3

4 5 6

7 8 9

Output: 

1 2 4 7 5 3 6 8 9



115. Remove the duplicates in the String.

Testcase 1:

Input: Java1234

Output: Javb1234 (Remove the second ‘a’ as it is duplicated)

Testcase 2:

Input: Python1223:

Output: Python1234 (Replace the second 2 with 3, and replace 3 with 4 as 3 is replaced for the duplicated 2)

Testcase 3:

Input: aBuzZ9900

Output: aBuzC9012

(Replace the second ‘Z’ with ‘C’ as ‘a’ and ‘B’ are already there in the String. Replace with capital C as the letter to be replaced is capital Z. The second 9 turns out to be zero and the zero turns out to ‘1’ and the second zero turns out to ‘2’)



116. Print whether the version is upgraded, downgraded or not changed according to the input given.

example: Input : Version1 4.8.2 Version2 4.8.4 Output: upgraded, Input : Version1 4.0.2 Version2 4.8.4 Output: downgraded



117.Print all possible subsets of the given array whose sum equal to given N.

example: Input: {1, 2, 3, 4, 5} N=6 Output: {1, 2, 3}, {1, 5}, {2, 4}



118. Reverse the words in the given String1 from the first occurrence of String2 in String1 by maintaining white Spaces.

example: String1 = Input: This is a test String only String2 = st Output: This is a only String test



119. calculate Maximum number of chocolates can eat and Number of wrappers left in hand.

Money: Total money one has to spend.

Price: price per chocolate.

wrappers: minimum number of wrappers for exchange choco: number of chocolate for wrappers.

Max visit: Maximum number of times one can visit the shop.(if zero consider it infinite)

example: input: Money:40 Price:1 wrappers:3 choco:1 Max visit:1 Output: total chocolate can eat: 53 wrappers left in hand:14



120.Print the word with odd letters – PROGRAM

Sample Output-

P      P

 R    R 

  O  O  

   G   

  R  R  

 A    A 

M      M

121.

Sample Input – Alternate Sorting 

Input: {1, 2, 3, 4, 5, 6, 7}

output: {7, 1, 6, 2, 5, 3, 4}

 

122.Given an array of values persons[], each represents the weight of the persons. There will be infinite bikes available. Given a value K which represents the maximum weight that a bike accommodates. Along with that one more condition, a bike can carry two persons at a time. You need to find out the least number of times, the bike trips are made.



123.Assume there exists infinite grid, you’re given initial position x, y. Inputs will be movements either L or R or U or D. After n inputs, you need to give the current position.

•	Input: 

•	4 5 //initial position x, y

•	9 //number of movements

•	U L R R D D U L R //7 movements

•	Output:

5 5

•	Given a matrix NxN, you are initially in the 0, 0 position. The matrix is filled with ones and zeros. Value “one” represents the path is available, while “zero” represents the wall. You need to find the can you able to reach the (N-1)x(N-1) index in the matrix. You can move only along the right and down directions if there’s “one” available.

•	Input:

•	5 //N value

•	1 0 1 0 0

•	1 1 1 1 1

•	0 0 0 1 0

•	1 0 1 1 1

•	0 1 1 0 1

•	Output:

Yes



124.Given an array of integers, compute the maximum value for each integer in the index, by either summing all the digits or multiplying all the digits. (Choose which operation gives the maximum value)

•	Input:

•	5

•	120 24 71 10 59

•	Output:

•	3 8 8 1 45

Explanation: For index 0, the integer is 120. Summing the digits will give 3, and whereas Multiplying the digits gives 0. Thus, maximum of this two is 3.



125. -1 represents ocean and 1 represents land find the number of islands in the given matrix.

Input:   n*n matrix

       1 -1 -1  1

      -1  1 -1  1

      -1 -1  1 -1

      -1 -1 -1  1

Output: 2 (two islands that I have 

bold in matrix at 1, 1 and 2, 2)



126. Print all the possible subsets of array which adds up to give a sum.

Input: array{2, 3, 5, 8, 10}

       sum=10

Output: {2, 3, 5}

       {2, 8}

       {10}



127. There is a circular queue of processes. Every time there will be certain no of process skipped and a particular start position. Find the safe position.

Input: Number of process:5

       Start position:3

       Skip: 2nd

Output: 1 will be the safest position

(Logic: 1 2 3 4 5 starting from 3, 5th process will be skipped

        1 2 3 4 5 process 2 will be skipped

        1 2 3 4 5 process 4 will be skipped

        1 2 3 4 5 process 3 will be skipped, so safest process is 1.



128.Given N. print the following snake pattern (say N = 4). condition:  must not use arrays ( 1D array  or 2D array like Matrix ).

1   2   3   4

8   7   6    5

9   10  11   12

16  15  14  13

 

129.Given N. print the Latin Matrix (say N = 3). condition:  must not use strings(aka character literals), arrays (both 1D and 2D), inbuilt functions(like rotate).

 A   B   C

B   C   A

C   A   B



130.  Given a number N. find the minimum count of numbers in which N can be represented as a sum of numbers x1, x2, … xn. where xi is number whose digits are 0s and 1s.

example 1)  i/p :  N = 33

o/p : count = 3.     33( 11 + 11 + 11 )

some other possibilities of 33 is (11 + 11 + 10 + 1),   (11 + 10 + 10 + 1 + 1 ), (10 + 10 + 10 + 1 + 1 + 1)



131.   Finding all permutations of a string. ( backtracking approach ).



132.   Given an array of integers, write a program to re-arrange the array in the given form.

1st_largest, 1st_smallest, 2nd_largest, 2nd_smallest, 3rd_largest ……. etc.



133.Sort the given elements in decending order based on the number of factors of each element – Solution 1



134.Find whether the given number is palindrome or not. Don’t use arrays or strings



135.Reverse the given string keeping the position of special characters intact



136.Find the shortest path from one element to another element in a matrix using right and down moves alone. The attached solution uses moves in all directions. – Solution 4


137. First Occurrences

Given two strings, find the first occurrence of all characters of second string in the first string and

print the characters between the least and the highest index

I/P: ZOHOCORPORATION PORT

O/P: OHOCORPORAT

Explanation: The index of P in first string is 7, O is 1, R is 6 and T is 11. The largest range is 1 – 11.

So print the characters of the first string in this inex range i.e. OHOCORPORAT



138. Matrix Diagonal sum

Given a matrix print the largest of the sums of the two triangles split by diagonal from top right to bottom left

I/P:

3 3

1 2 3

4 5 6

7 8 9

O/P: 38



139. Matrix Addition

Given n integer arrays of different size, find the addititon of numbers represented by the arrays

I/P: 4

3 5 4 2

2 4 5

4 5 6 7 8

4 9 2 1

1 2

O/P: 50856


140.
Many students will able to solve 3 problems in this round. So make sure you stand apart from the crowd.Their vacancy is going to be 5 for a team. The performance in this round could be taken as a tie breaker for round 3.

input : aaabbcc

output : abc

141.
Evaluate the expression and sort and print the output. Getting the input is the tricky part

Input:

Number of input : 4

2*3

2^2^2

35

3*1

Output:

3*1

2*3

2^2^2

35



142.
Given a 6 blocks, of different height h1, …, h6 . Make 2 towers using 3 Blocks for each tower in desired height h1, h2. Print the blocks to be used in ascending order

Input:

1 2 5 4 3  6

height of tower: 6 15

Output :

1 2 3 & 4 5 6


143.
Given a 5X5 chess board as input. 9 knights are placed in the board. Print whether the configuration valid or Invalid.


144.
Given a number, print all the code that can be formed with z={a=1, .., z=26}.

1123

{1, 1, 2, 3} = aabc

{11, 2, 3} = kbc

{1, 1, 23} = aaw

{11, 23} = kw



145.Given a String with or without special characters find if it is Palindrome or Not.. No splitting of array must be done or No additional spaces must be used for storing the array..

Eg: RACE CAR

Eg: I DID, DID I ?



146. Given an array of integers of size n. Convert the array in such a way that if next valid number is same as current number, double its value and replace the next number with 0. After the modification, rearrange the array such that all 0’s are shifted to the end.

Input : arr[] = {2, 2, 0, 4, 0, 8}

Output : 4 4 8 0 0 0

Input : arr[] = {0, 2, 2, 2, 0, 6, 6, 0, 0, 8}

Output : 4 2 12 8 0 0 0 0 0 0



147. TWISTED PRIME NUMBER

A number is said to be twisted prime if it is a prime number and reverse of the number is also a prime number.

Input : 97

Output : Twisted Prime Number

Explanation: 97 is a prime number

and its reverse 79 is also a prime

number.



148.Given an array A[] and a number x, check for pair in A[] with sum as x.

Eg : Input {1, 2, 4, 3, 5, 6}

SUM : 5

Output : 2 (1, 4) & (2, 3)



149.Largest Sum Contiguous Subarray

(Kadane’ Algorithm )



150.Diamond pattern : for given input size -> Here 3

  *

 ***

*****

 ***

  *



151. Given a text and a wildcard pattern, implement wildcard pattern matching algorithm that finds if wildcard pattern is matched with text. The matching should cover the entire text (not partial text).

The wildcard pattern can include the characters ‘?’ and ‘*’

‘?’ – matches any single character

‘*’ – Matches any sequence of characters (including the empty sequence)

Example:

Text = “baaabab”,

Pattern = “*****ba*****ab”,

output : true

Pattern = “baaa?ab”, output : true

Pattern = “ba*a?”, output : true

Pattern = “a*ab”, output : false



152. Given an input string and a dictionary of words, find out if the input string can be segmented into a space-separated sequence of dictionary words. See following examples for more details.

Consider the following dictionary 

{ i, like, sam, sung, samsung, mobile, ice, 

  cream, icecream, man, go, mango}

Input:  ilike

Output: Yes 

The string can be segmented as "i like".

Input:  ilikesamsung

Output: Yes

The string can be segmented as "i like samsung" 

or "i like sam sung".<>


153.Print the following pattern

   1  

  3 2

 6 5 4

10 9 8 7

10 9 8 7 

 6 5 4 

  3 2 

   1



154.Given an array as input, The condition is if the number is repeated you must add the number and put the next index value to 0. If the number is 0 print it at the last.

Eg: arr[] = { 0, 2, 2, 2, 0, 6, 6, 0, 8}

Output: 4 2 12 8 0 0 0 0 0 .



155. Given two Strings s1 and s2, remove all the characters from s1 which is present in s2.

Input: s1=”expErIence”, s2=”En”

output: s1=”exprIece”



156.Find the next greater element for each element in given array.

input: array[]={6, 3, 9, 10, 8, 2, 1, 15, 7};

output: {7, 5, 10, 15, 9, 3, 2, _, 8}

If we are solving this question using sorting, we need to use any O(nlogn) sorting algorithm.



157.Print all distinct permutations of a given string with duplicate characters.

https://www.geeksforgeeks.org/distinct-permutations-string-set-2



158.Given a number, find the next smallest palindrome.



159.Given an array with repeated numbers, Find the top three repeated numbers.

input: array[]={3, 4, 2, 3, 16, 3, 15, 16, 15, 15, 16, 2, 3}

output: 3, 16, 15



160.Given two dimensional matrix of integer and print the rectangle can be formed using given indices and also find the sum of the elements in the rectangle

Input: mat[M][N] = {{1, 2, 3, 4, 6}, {5, 3, 8, 1, 2}, {4, 6, 7, 5, 5}, {2, 4, 8, 9, 4} };

index = (2, 0) and (3, 4)

Output:

Rectangle

4 6 7 5 5

2 4 8 9 4

sum 54



161. Find the result subtraction, multiplication, division of two integers using + operator.

Input: 6 and 4

output:

addition 6+4 = 10,    subtraction  6+(-4) = 2,   multiplication = 24,   division = 1

Input : -8 and -4

Output:

addition -8+(-4) = -12,    subtraction  (-8)+(-(-4)) = -4,   multiplication = 32,   division = 2

 

162.Given a sentence of string, in that remove the palindrome words and print the remaining.

Input:

He did a good deed

Output:

He good

Input:

Hari speaks malayalam

Output:

Hari speaks

 

163.Given two dates, find total number of days between them.

Input: dt1 = {10, 2, 2014} dt2 = {10, 3, 2015}

Output: 393

dt1 represents “10-Feb-2014” and dt2 represents “10-Mar-2015” The difference is 365 + 28

Input: dt1 = {10, 2, 2000} dt2 = {10, 3, 2000}

Output: 29

Note that 2000 is a leap year

Input: dt1 = {10, 2, 2000} dt2 = {10, 2, 2000}

Output: 0

Both dates are same

Input: dt1 = {1, 2, 2000}; dt2 = {1, 2, 2004};

Output: 1461

Number of days is 365*4 + 1

 

164. Let 1 represent ‘A’, 2 represents ‘B’, etc. Given a digit sequence, count the number of possible decodings of the given digit sequence.

Examples:

Input: digits[] = “121”

Output: 3 // The possible decodings are “ABA”, “AU”, “LA”

Input: digits[] = “1234” Output: 3

// The possible decodings are “ABCD”, “LCD”, “AWD”

 

165. Print all possible words from phone digits



166. Print longest sequence between same character

Ex I/p abcccccbba

O/p 8 (from a to a)

I/p aaaaaaaa

O/p 6



167.sort the array odd numbers in ascending and even numbers in descending.

I/p 5 8 11 6 2 1 7

O/p 1 5 7 11 8 6 2



168. It’s about anagram.i/p was array of strings .and a word was given to find whether it has anagram in given array.

I/p catch, got, tiger, mat, eat, Pat, tap, tea

Word: ate

O/p eat, tea


169.array of numbers were given to find a number which has same sum of numbers in it’s either side.

I/p 1, 2, 3, 7, 6

O/p 7(has 1+ 2+3 in left 6 in right)


170.prime number – print n prime numbers



171.prime factor – sort the array based on the minimum factor they have.



172.adding a digit to all the digits of a number eg digit=4, number = 2875, o/p= 612119



173.form the largest possible number using the array of numbers.



174.lexicographic sorting. without using predefined functions in c and java



175.given a set of numbers, and a digit in each iteration, if the digit exists in any of  the numbers, remove its occurrences and ask for the next digit till the list becomes empty.



176.Check if a number ‘a’ is present in another number ‘b.


177. Find the extra element and its index

Input : [ 10, 20, 30, 12, 5 ]

    [ 10, 5, 30, 20 ]

Output : 12 is the extra element in array 1 at index 4

Input : [ -1, 0, 3, 2 ]

    [ 3, 4, 0, -1, 2 ]

Output : 4 is the extra element in array 3 at index 5



178. Find the least prime number that can be added with first array element that makes them divisible by second array elements at respective index (check for prime numbers under 1000, if exist return -1 as answer) & (Consider 1 as prime number)

Input : [ 20, 7 ]

    [ 11, 5 ]

Output : [ 1, 3 ]

Explanation : 

(20 + ?) % 11 

( 7 + ?) % 5



179. Sort the array elements in descending order according to their frequency of occurrence

Input : [ 2 2 3 4 5 12 2 3 3 3 12 ]

Output : 3 3 3 3 2 2 2 12 12 4 5

Explanation : 3 occurred 4 times, 2 occurred 3 times, 12 occurred 2 times, 4 occurred 1 time, 5 occurred 1 time

Input : [ 0 -1 2 1 0 ]

Output : 0 0 -1 1 2

Note : sort single occurrence elements in ascending order



180. Print true if second string is a substring of first string, else print false.

Note : * symbol can replace n number of characters

Input : Spoon  Sp*n  Output : TRUE

    Zoho     *o*o  Output : TRUE

    Man       n*     Output : FALSE

    Subline  line   Output : TRUE



181.Print second frequently occurring number in given series

Example :

Input: 1 1 2 3 1 2 4

Output: 2

Explanation: 1 occurs 3 times, 2 occurs 2 times, 3 occurs 1 time and 4 occurs 1 time. Hence second frequently occurring number in given series is 2



182.Print only numbers which is present in Fibonacci series (0 1 1 2 3 5 8 ……..)

Example:

Input: 2 10 4 8

Output: 2 8 

Input: 1 10 6 8 13 21

Output: 1 8 13 21



183. Print pattern like this

Example:

Input: 1

Output: 0

Input: 2

Output: 

0 0

0 1

1 0

1 1



Input: 3

Output:

0 0 0

0 0 1

0 1 0

0 1 1

1 0 0

1 0 1

1 1 0

1 1 1



184. NxN matrix will be provided. 0->block, 1->Not a block

Always starting point is (0,0), Ending point is (N-1,N-1).

You have to go from starting point to ending point. One valid solution is enough.

Example:

   Input:

   N=4 

   1 1 0 0

   1 0 0 1

   1 1 1 1

   0 0 0 1

   Output:

   _ 1 0 0

   _ 0 0 1

   _ _ _ _

   0 0 0 _



185. Insert 0 after consecutive (K times) of 1 is found.

Example:

Input:

Number of bits: 12

Bits: 1 0 1 1 0 1 1 0 1 1 1 1

Consecutive K: 2

Output:

1 0 1 1 0 0 1 1 0 0 1 1 0 1 1 0



186.Find the maximum of three numbers?


187. Print the total number of odd and even digits in the given number.

  Ex.  Input  :  1234567

    Output  :  ODD 4

        EVEN 3



188. Find the second maximum among the given numbers.

  Ex.  INPUT  :  

    Size of Array    :  8

    Enter the elements  :  2 5 1 6 2 6 7 10

    OUTPUT  :

    7

  Ex.  INPUT  :

    Size of Array    :  4

    Enter the elements  :  4 1 2 2

    OUTPUT  :

    2

  Ex.  INPUT  :

    Size of Array    :  1

    Enter the elements  :  1

    OUTPUT  :

    No second maximum



189. Print the following pattern

  Ex.  INPUT  :  5

    OUTPUT  :



            1

           1 1

          1 2 1

         1 3 3 1

        1 4 6 4 1

  Ex.  INPUT  :  7

    OUTPUT  :

            1

           1 1

          1 2 1

         1 3 3 1

        1 4 6 4 1

       1 5 10 10 5 1

      1 6 15 20 15 6 1



190. Given a two dimensional array which consists of only 0’s and 1’s. Print the matrix without duplication.

  Ex.  INPUT  :

    Enter Row Size    :  4

    Enter column size  :  3

    Enter the matrix  :

    1 0 1

    1 1 0

    1 1 1

    1 0 1    

    OUTPUT  :

    Unique Matrix  :

    1 0 1

    1 1 0

    1 1 1



191. Given an array of positive numbers. Print the numbers which have longest continuous range.

  Ex.  INPUT  :  

    Enter array size  :  8

    Enter arryay elements  :  1 3 10 7 9 2 4 6

    OUTPUT  :

    1 2 3 4

  Ex.  INPUT  :  

    Enter array size  :  8

    Enter arryay elements  :  1 3 9 7 8 2 4 6  

    OUTPUT  :

    1 2 3 4

    6 7 8 9



191. Given two arrays. Find its union.

  Input  : 

  Enter size of first array  :  6

  Enter the elements    :  1 2 3 4 5 3

  Enter size of second array  :  4

  Enter the elements    :  1 2 7 5

  OUTPUT  :

 1 2 3 4 5 7



192. Given an array of numbers. Print the numbers without duplication. 

  INPUT  :  

  Enter the array size  :  4

  Enter the elements  :  1 1 2 4  

  OUTPUT  :

  1 2 4 



193. Given an array of numbers and a number k. Print the maximum possible k digit number which can be formed using given numbers.

  INPUT  :  

  Enter the array size  :  4

  Enter the elements  :  1 4 973 97

  Enter number of digits  :  3

  OUTPUT  :

  974 

  INPUT  :  

  Enter the array size  :  6

  Enter the elements  :  1 4 89 73 9 7

  Enter number of digits  :  5

  OUTPUT  :

  98973



194. Given an array of numbers and a window of size k. Print the maximum of numbers inside the window for each step as the window moves from the beginning of the array.

  INPUT  :

  Enter the array size  :  8

  Enter the elements  :  1,3,5,2,1,8,6,9

  Enter the window size  :  3

  OUTPUT  :

  5 5 5 8 8 9



195.Given a string, reverse only vowels in it; leaving rest of the string as it is.

Input : abcdef

Output : ebcdaf



196. Write a program to check if the given words are present in matrix given below. The words can be left to right, top to bottom and the diagonals (in top to bottom direction)

 

197. Write a program to form lines using given set of words. The line formation should follow below rules.

i) Total characters in a single line excluding the space between the words and the favorite character should not exceed the given number.

ii) Favorite character is case insensitive.

iii) Words should not be broken up. Complete words alone should be used in a single line. A word should be used in one line only.

Input : Max char per line = 10

        Favorite character = 'o'

        Words : Zoho, Eating, Watching, Pogo

                Loving, Mango

Output : Watching Zoho

         Eating Mango

         Loving Pogo.



198. Adding 2 numbers

Given 2 huge numbers as separate digits, store them in array and process them and calculate the sum of 2 numbers and store the result in an array and print the sum.

Input:

Number of digits:12

9 2 8 1 3 5 6 7 3 1 1 6

Number of digits:9

7 8 4 6 2 1 9 9 7

Output :

9 2 8 9 2 0 2 9 5 1 1 3



199.Given sorted array check if two numbers sum in it is a given

value

Input

Array = {1 3 4 8 10 } N = 7

output

true



200. Compiuting value of sin (x)

Input x = 30 n = 10

output = 0.5

Hint : The equation sin(x) = x – x^3 / 3! + x^5 / 5! – ….



201. Write function to find multiplication of 2 numbers using +

operator You must use minimum possible iterations.

Input: 3 , 4

Output 12



202. Given array find maximum sum of contiguous sub array

{-2 -3 4 -1 -2 1 5 -3}

output 7 elements [ 4 -1 -2 1 5]



203. Given unsorted array find all combination of the element for a given sum. Order should be maintained.

Input :

8 3 4 7 9 N=7

Output

{3 4 } {7}



204. Given an odd length word which should be printed from the middle of the word.

The output should be in the following pattern.

Example:

Input: PROGRAM

Output:

              G

            GR

          GRA

       GRAM

     GRAMP

   GRAMPR

GRAMPRO



205. It is a program to implement Least Recently Used (LRU) concept. Given a key, if it is already existed then it should be marked as recently used otherwise a value should be stored which is given as input and marked as recently used. The capacity is to store only 10 key, value pairs. If the table is full and given a new key; the key, value pair which is not recently used should be deleted which gives feasibility to store the new key, value pair.



206. Given a few pairs of names in the order child, father. The input is a person name and level number. The output should be the number of children in that particular level for the person given.

Example:

Input:

[

{Ram, Syam},

{Akil, Syam},

{Nikil, Ram},

{Subhash, Ram},

{Karthik, Akil}

];

Syam 2

Output: 3 (Syam has Ram and Akil in level 1 and in level 2 he have Nikil, Subhash, Karthik. So the answer is 3).



207. Given an array of positive integers. The output should be the number of occurrences of each number.

Example:

Input: {2, 3, 2, 6, 1, 6, 2}

Output:

1 – 1

2 – 3

3 – 1

6 – 2



208. Given an array, find the minimum of all the greater numbers for each element in the array.

Sample: 

Array : {2, 3, 7, ¬1, 8, 5, 11} 

Output: 

{2¬>3, 3¬>5, 7¬>8, ¬1¬>2, 8¬>11, 5¬>7, 11¬>} 



209.Find the largest sum contiguous subarray which should not have negative numbers. We have to print the sum and the corresponding array elements which brought up the

sum.

Sample: 

Array : {¬2, 7, 5, ¬1, 3, 2, 9, ¬7} 

Output: 

     Sum : 14 

     Elements : 3, 2, 9  



210.Given a string, we have to reverse the string without changing the position of punctuations and spaces.

Sample:   house no : 123@ cbe 

Output:    ebc32 1o :  nes@ uoh 



211.Given a 2D grid of characters, you have to search for all the words in a dictionary by

moving only along two directions, either right or down. Print the word if it occurs.

Sample :         

  a   z  o   l 

  n   x  h   o

  v   y   i   v 

  o   r   s  e 

 Dictionary = {van, zoho, love, are, is} 

 Output: 

    zoho 

    love 

    Is 

 

212.Given a string, change the order of words in the string (last string should come first).

Should use RECURSION

Sample:   one two three 

Output :  three two one 


213.Print the word with odd letters as

P M

R A

O R

G

O R

R A

P M



214. Given a set of numbers like <10, 36, 54,89,12> we want to find sum of weights based on the following conditions

1. 5 if a perfect square

2. 4 if multiple of 4 and divisible by 6

3. 3 if even number

And sort the numbers based on the weight and print it as follows

<10,its_weight>,<36,its weight><89,its weight>

Should display the numbers based on increasing order.



215. Save the string “WELCOMETOZOHOCORPORATION” in a two dimensional array and search for substring like “too” in the two dimensional string both from left to right and from top to bottom.

w e L C O

M E T O Z

O H O C O

R P O R A

T I O n

And print the start and ending index as

Start index : <1,2>

End index: <3, 2>



216. Given a 9×9 sudoku we have to evaluate it for its correctness. We have to check both the sub matrix correctness and the whole sudoku correctness.



217. Given a two dimensional array of string like

<”luke”, “shaw”>

<”wayne”, “rooney”>

<”rooney”, “ronaldo”>

<”shaw”, “rooney”>

Where the first string is “child”, second string is “Father”. And given “ronaldo” we have to find his

no of grandchildren Here “ronaldo” has 2 grandchildren. So our output should be 2.



218.Alternate sorting: Given an array of integers, rearrange the array in such a way that the first element is first maximum and second element is first minimum.

Eg.) Input : {1, 2, 3, 4, 5, 6, 7}

Output : {7, 1, 6, 2, 5, 3, 4}



219.Remove unbalanced parentheses in a given expression.

Eg.) Input : ((abc)((de))

Output : ((abc)(de))

Input : (((ab)

Output : (ab)



220. Form a number system with only 3 and 4. Find the nth number of the number system.

Eg.) The numbers are: 3, 4, 33, 34, 43, 44, 333, 334, 343, 344, 433, 434, 443, 444, 3333, 3334,

3343, 3344, 3433, 3434, 3443, 3444 ....



221.Check whether a given mathematical expression is valid.

Eg.) Input : (a+b)(a*b)

Output : Valid

Input : (ab)(ab+)

Output : Invalid

Input : ((a+b)

Output : Invalid



222.
1. Write a program to give the following output for the given input

Eg 1: Input: a1b10

Output: abbbbbbbbbb

Eg: 2: Input: b3c6d15

Output: bbbccccccddddddddddddddd

The number varies from 1 to 99.



223. Write a program to sort the elements in odd positions in descending order and elements in

ascending order

Eg 1: Input: 13,2 4,15,12,10,5

Output: 13,2,12,10,5,15,4

Eg 2: Input: 1,2,3,4,5,6,7,8,9

Output: 9,2,7,4,5,6,3,8,1



224. Write a program to print the following output for the given input. You can assume the string is of

odd length

Eg 1: Input: 12345

Output:

1 5

2 4

3

2 4

1 5

Eg 2: Input: geeksforgeeks

Output:

g s

e k

e e

k e

s g

f r

o

f r

s g



k e

e e

e k

g s



225. Find if a String2 is substring of String1. If it is, return the index of the first occurrence. else

return -1.

Eg 1:Input:

String 1: test123string

String 2: 123

Output: 4

Eg 2: Input:

String 1: testing12

String 2: 1234

Output: -1



226. Given two sorted arrays, merge them such that the elements are not repeated

Eg 1: Input:

Array 1: 2,4,5,6,7,9,10,13

Array 2: 2,3,4,5,6,7,8,9,11,15

Output:

Merged array: 2,3,4,5,6,7,8,9,10,11,13,15



227. Using Recursion reverse the string such as

Eg 1: Input: one two three

Output: three two one

Eg 2: Input: I love india

Output: india love I



228.Pattern Printing  
    Print a triangle pattern of stars.  
    Input:  
        4 
    Output:  
        *
        ***
        *****
        *******

229. Decimal to Hexadecimal Conversion  
    Convert a given decimal number to hexadecimal.  
    Input: `15`  
    Output: `F`  

    Input: `255`  
    Output: `FF`  

230. Longest Palindromic Substring in O(n) and o(n^2) both time complexity solution  
    Find the longest palindromic substring in a given string.  
    Input: `babad`  
    Output: `bab` (or `aba`)  

    Input: `cbbd`  
    Output: `bb`  

    4. A number is called as binary-decimal if all the digits in the number should be either ‘1’ or ‘0’. Any number can be written as a sum of binary-decimals. Our task is to find the minimum number of binary-decimals to represent a number.
        Input : 32
        Output : 10 11 11
        Input : 120
        Output : 10 110


231.Shortest path for king from source to destination


232. Pattern Printing  
   Print the number pattern as shown below.  
   Input:  
   4
   Output:  
   1
   1 2
   1 2 3
   1 2 3 4
     2 3 4
       3 4
         4

233. Find Leaders in an Array  
   Find all leaders in the array (numbers greater than all elements to their right).  
   Input: [16, 17, 4, 3, 5, 2]  
   Output: [17, 5, 2]

   Input: [1, 2, 3, 4, 0]  
   Output: [4, 0] 

234. Find the Longest String in a Paragraph 
   Find the longest string (word) in a paragraph.  
   Input: This is a simple paragraph.  
   Output: paragraph  

   Input: Hello world!  
   Output: Hello  

235. Find Target Element  
   Find the target element in the array.  
   Input: Array: `[4, 5, 6, 7, 0, 1, 2]`, Target: `0`  
   Output: `Index: 4`  

   Input: Array: `[4, 5, 6, 7, 0, 1, 2]`, Target: `3`  
   Output: `Not Found`  

236. **Second Largest Element in an Array**  
   Find the second largest element in the array.  
   Input:** `[12, 35, 1, 10, 34, 1]`  
   Output:** `34`  

   Input: `[1, 2, 3, 4, 5]`  
   Output: `4`  

237. Trailing Zeroes in Factorial  
   Given n >= 0, return the count of trailing zeroes in n!.

   Sample Input 1: 10  
   Sample Output 1: 2  
   Explanation: 10! = 3628800, 2 trailing zeroes.

   Sample Input 2: 20  
   Sample Output 2: 4  
   Explanation:** 20! = 2432902008176640000, 4 trailing zeroes.

   Sample Input 3: 100  
   Sample Output 3: 24


238. Find Missing k-th Positive Integer  
   Given an array of integers, find the k-th missing positive integer.

   Sample Input 1: arr: [-1, 2, 3, 4], k: 2  
   Sample Output 1: 2

   Sample Input 2: arr: [1, 2, 3, 4, -1], k: 1  
   Sample Output 2: 5



240. Insert n Elements in an Array with Adjacent Empty Condition  
   Given an array where '1' means not empty and '0' means empty, check if you can insert n elements such that adjacent elements are empty.

   Sample Input 1: arr: [1, 0, 0, 0, 1], n: 1  
   Sample Output 1: True

   Sample Input 2: arr: [1, 0, 0, 0, 1], n: 2  
   Sample Output 2: False`


241. Remove Duplicates in k-length Substring
   Given an array, remove duplicates to form k-length substrings.

   Sample Input 1: arr: [1, 1, 1, 1], k: 2  
   Sample Output 1: 1 1 1

   Sample Input 2: arr: [2, 32, 32, 23, 32]`, `k: 4
   Sample Output 2: 3 2 2


242. Count Inversions in an Array
   For a given array of distinct integers, count the number of inversions (where arr[i] > arr[j] and i < j).

   Sample Input 1: array: [3, 2, 1]  
   Sample Output 1: 3

   Sample Input 2: array: [2, 5, 1, 3, 4]  
   Sample Output 2: 4


243.Max Water Container  
   Given an array where each element represents the height of a line, find two lines that form a container holding the most water.

   Sample Input 1: height = [6, 8, 5, 4, 8, 3, 7]
   Sample Output 1: 42

   Sample Input 2: height = [1, 2, 1]
   Sample Output 2: 2

244.Sort Array by Factor Count
   Given an array, sort it based on the number of factors each element has.


245.Find Combinations for Balanced Parentheses
    Find all valid combinations of balanced parentheses for a given number
        Input:
        n = 3  
        Output:
        4  
        Explanation: 
        Valid combinations:  
        ()()()  
        (())()  
        ()(())  
        ((()))


246. Rotate Array by a Given Position
Rotate an array to the right by a given number of positions.  
    Input:  
    Array: [1, 2, 3, 4, 5]  
    Positions: 2  
    Output:
    [4, 5, 1, 2, 3]
    Input:  
    Array: [10, 20, 30, 40]  
    Positions: 1   
    Output:
    [40, 10, 20, 30]


247. Find Islands in a Matrix 
Count the number of islands (groups of connected `1`s) in a matrix where `0` represents desert and `1` represents water.  
    Input:
    Matrix:  
    1 1 0  
    0 1 0  
    1 0 1  
    Output:  
    1

248. Find Shortest Path in a Triangular Matrix
Find the shortest path in a triangular matrix, starting from the top and moving to adjacent elements j, j-1, j+1. 

    Input:
    Matrix:  
    1  
    2 2  
    3 5 3  
    2 4 4 6  
    Output:
    Path: 1 -> 2 -> 3 -> 2  
    Shortest Path Sum: 8

    Input:
    Matrix:  
    1  
    1 2  
    10 10 3  
    2 4 4 6  
    Output:  
    Path: 1 -> 1 -> 3 -> 4  
    Shortest Path Sum: 9

249.
import java.util.*;

class Solution {
    private static void merge(int[] arr, int low, int mid, int high) {
        ArrayList<Integer> temp = new ArrayList<>(); // temporary array
        int left = low;      // starting index of left half of arr
        int right = mid + 1;   // starting index of right half of arr

        //storing elements in the temporary array in a sorted manner//

        while (left <= mid && right <= high) {
            if (arr[left] <= arr[right]) {
                temp.add(arr[left]);
                left++;
            } else {
                temp.add(arr[right]);
                right++;
            }
        }

        // if elements on the left half are still left //

        while (left <= mid) {
            temp.add(arr[left]);
            left++;
        }

        //  if elements on the right half are still left //
        while (right <= high) {
            temp.add(arr[right]);
            right++;
        }

        // transfering all elements from temporary to arr //
        for (int i = low; i <= high; i++) {
            arr[i] = temp.get(i - low);
        }
    }

    public static void mergeSort(int[] arr, int low, int high) {
        if (low >= high) return;
        int mid = (low + high) / 2 ;
        mergeSort(arr, low, mid);  // left half
        mergeSort(arr, mid + 1, high); // right half
        merge(arr, low, mid, high);  // merging sorted halves
    }
}
public class tUf {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int n = 7;
        int arr[] = { 9, 4, 7, 6, 3, 1, 5 };
        System.out.println("Before sorting array: ");
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
        Solution.mergeSort(arr, 0, n - 1);
        System.out.println("After sorting array: ");
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }

}
Output:

Before Sorting Array:
9 4 7 6 3 1 5
After Sorting Array:
1 3 4 5 6 7 9

Time complexity: O(nlogn) 

Reason: At each step, we divide the whole array, for that logn and we assume n steps are taken to get a sorted array, so overall time complexity will be nlogn

Space complexity: O(n)  

Reason: We are using a temporary array to store elements in sorted order.

Auxiliary Space Complexity: O(n)


250.import java.util.*;

public class tUf {
    static void selection_sort(int arr[], int n) {
        for (int i = 0; i < n - 1; i++) {
            int mini = i;
            for (int j = i + 1; j < n; j++) {
                if (arr[j] < arr[mini]) {
                    mini = j;
                }
            }
            //swap
            int temp = arr[mini];
            arr[mini] = arr[i];
            arr[i] = temp;
        }

        System.out.println("After selection sort:");
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }

    public static void main(String args[]) {

        int arr[] = {13, 46, 24, 52, 20, 9};
        int n = arr.length;
        System.out.println("Before selection sort:");
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
        selection_sort(arr, n);
    }
}

251.
import java.util.*;

public class Main {
    static void insertion_sort(int[] arr, int n) {
        for (int i = 0; i <= n - 1; i++) {
            int j = i;
            while (j > 0 && arr[j - 1] > arr[j]) {
                int temp = arr[j - 1];
                arr[j - 1] = arr[j];
                arr[j] = temp;
                j--;
            }
        }

        System.out.println("After insertion sort: ");
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }
    public static void main(String args[]) {
        int arr[] = {13, 46, 24, 52, 20, 9};
        int n = arr.length;
        System.out.println("Before Using insertion Sort: ");
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
        insertion_sort(arr, n);
    }

}  

252.// A Java program to print all subsets of a set
import java.io.IOException;

class Main
{
	// Print all subsets of given set[]
	static void printSubsets(char set[])
	{
		int n = set.length;

		// Run a loop for printing all 2^n
		// subsets one by one
		for (int i = 0; i < (1<<n); i++)
		{
			System.out.print("{ ");

			// Print current subset
			for (int j = 0; j < n; j++)

				// (1<<j) is a number with jth bit 1
				// so when we 'and' them with the
				// subset number we get which numbers
				// are present in the subset and which
				// are not
				if ((i & (1 << j)) > 0)
					System.out.print(set[j] + " ");

			System.out.println("}");
		}
	}

	// Driver code
	public static void main(String[] args)
	{
		char set[] = {'a', 'b', 'c'};
		printSubsets(set);
	}
}

253.

// C program to print Pascal’s Triangle
// using combinations in O(n^2) time
// and O(1) extra space function
#include <stdio.h>
void printPascal(int n)
{
    for (int line = 1; line <= n; line++) {
        for (int space = 1; space <= n - line; space++)
            printf("  ");
        // used to represent C(line, i)
        int coef = 1;
        for (int i = 1; i <= line; i++) {
            // The first value in a line
            // is always 1
            printf("%4d", coef);
            coef = coef * (line - i) / i;
        }
        printf("\n");
    }
}
// Driver code
int main()
{
    int n = 5;
    printPascal(n);
    return 0;
}


254.number to excel in java
255.excel to number java
256.number to Roman
257.Roman to number 








62.	https://docs.google.com/document/d/1f8TAH1dQ9Py9ykjISG-tRv6-TqWePOueKj7ZlvTL9LY/edit?tab=t.0

63.	https://sharmilanvipokan.blogspot.com/2023/09/zoho-round-2-programming-questions.html

64.	https://github.com/codeologic/zoho-round/blob/main/zoho%203rd%20round

65. https://github.com/pradeepkumar24rk/ZOHO-interview-Questions

